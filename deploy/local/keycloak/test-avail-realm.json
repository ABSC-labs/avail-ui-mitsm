{
  "id": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
  "realm": "avail",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "acd7d148-5c30-41c7-8bcc-14c410fb7c0e",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
        "attributes": {}
      },
      {
        "id": "8ca530c4-c93e-4224-b177-18861ff68905",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
        "attributes": {}
      },
      {
        "id": "5e31a6ef-4dec-4f55-b239-75bec4b40239",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
        "attributes": {}
      },
      {
        "id": "69761e21-fc31-471d-96c0-ab6e2ca7c169",
        "name": "default-roles-avail",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
        "attributes": {}
      },
      {
        "id": "9c742281-0b58-444f-801d-66399886b530",
        "name": "user",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492",
        "attributes": {}
      }
    ],
    "client": {
      "avail-krakend": [],
      "avail-ui": [],
      "realm-management": [
        {
          "id": "567e6470-143a-4c2e-b346-2898e7120d22",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "98713a2a-959a-4e14-86e4-5d988848fb85",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "e20dab8d-ab08-446d-b963-eb30cedc211c",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "view-clients",
                "manage-identity-providers",
                "manage-authorization",
                "manage-realm",
                "view-authorization",
                "manage-users",
                "query-users",
                "query-clients",
                "view-users",
                "create-client",
                "query-realms",
                "view-realm",
                "impersonation",
                "view-events",
                "manage-clients",
                "view-identity-providers",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "f5a70935-3299-431e-92cb-c593d24f56f1",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "d008d787-64f6-420d-8a8f-923ec48a2a06",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "7eb86814-c838-4c6c-b75e-5bc9ffad8db0",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "c2f9a4b2-2bd5-4772-a660-d64a3c26697e",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "13fe6712-e7a4-4ce2-8c3e-3e3175c1de3c",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "85ac963b-0e38-42be-a0ea-9da7f2bedc0f",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "14acc738-585f-4700-a6b8-9c1cbbeaa311",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "ede4316f-8137-402a-890f-5dd76f1ce8e4",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "ca598a59-aa71-41b9-8a65-8c7f4ad3c1ae",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "aa93ed90-d25f-4eeb-bb8b-ce12f7a0ba81",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "db7befb2-19df-4a5a-b163-d304223604a8",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "4cc76e3b-2c02-4951-9ab8-a29fd72168c3",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "6c191475-3e23-4c81-94d0-c8f3a8704436",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "4987c3b8-b4a4-4f27-8eb1-1ff5e6695ee9",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "4bef8251-27a8-4e9e-bb22-c92a30ad554d",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        },
        {
          "id": "9551146b-a6ef-4e18-be47-1c512f083104",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e91369a-06de-415b-9c40-46145cd14254",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "b7c29c4b-0ef4-4b99-b34b-8966a37eb675",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb293144-cfb5-4cc6-a0e6-60181f355ce3",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "0d399b1d-89e1-44c8-bee3-e8d0bc171bcb",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "f4b55042-63c2-4b37-b032-1b92e2c6d3a9",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "09965760-d734-415d-99b1-ef6fcaac8bff",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "16541641-9050-487e-a502-db1e8a80ead4",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "a4047955-8abd-400f-a994-513c481dbe4e",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "a5cd1654-b9a5-4fa9-b57c-0a12a97ab2cf",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "ebde63f5-8961-4173-b7f7-bbe09ea3e45d",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        },
        {
          "id": "b84d4f6f-61e6-40c3-abe3-1b7c915550d4",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "69761e21-fc31-471d-96c0-ab6e2ca7c169",
    "name": "default-roles-avail",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "c6d2e8b4-27dc-4c57-8748-aef0c78d2492"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppGoogleName", "totpAppFreeOTPName"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "e3d8e34f-7a1b-4cb3-b3c7-dd71a671f9f9",
      "createdTimestamp": 1671167724295,
      "username": "jane.doe",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Jane",
      "lastName": "Doe",
      "email": "jane.doe@example.com",
      "credentials": [
        {
          "id": "9e5592b7-55d7-4ce3-8e68-30217283ea4f",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1671167747617,
          "secretData": "{\"value\":\"N4pxe+uwX+UModBvFPk+rCvVpq96jMIYCr/dHnYs7pto596GT92XK26J1pG0TIUZAoUi7GAeZ+N/dZqXEsOuDQ==\",\"salt\":\"UzjxLGPDW4JvtjgHEGR+TQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["admin", "default-roles-avail", "user"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "5ca417e7-77e7-4c44-bbe2-9691ae5c94a8",
      "createdTimestamp": 1671146800508,
      "username": "john.doe",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "John",
      "lastName": "Doe",
      "email": "john.doe@example.com",
      "credentials": [
        {
          "id": "42ede761-05d3-45e3-a073-f01cd7f31101",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1674793774873,
          "secretData": "{\"value\":\"X0N1vueRNwRtM8REJ+PmGJq8FlvHwrBEc9SXQe2aHTB//Sb6vOeh3v+EnFCh7HTY1Rk2hkkJqXvK3l5GFvQR9g==\",\"salt\":\"6soMLZCCtMKAH4q8kvLHfw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-avail", "user"],
      "notBefore": 1674793787,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "7e9c24bf-455a-43cc-8aaf-28c7cbee7ac8",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/avail/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/avail/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "1b2c4f26-32ea-40ca-b409-a2a142a04bee",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/avail/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/avail/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "391342c3-5642-4799-9c62-4c3f4945d426",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "d4a59202-23e1-42bc-a363-fa5005b0eece",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "8e095efe-8d50-4ed5-958f-519eb91fcb90",
      "clientId": "avail-krakend",
      "name": "Avail KrakenD",
      "description": "API Gateway for Avail",
      "rootUrl": "http://localhost:3000/",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "8goDvJPFOt1QyekGcGUDdIDqhW6FTYUf",
      "redirectUris": ["http://localhost:3000/*", "https://oauth.pstmn.io/v1/callback"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1673394250",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:3000/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "151c3404-cdab-4f6a-8f47-ccde38f3d82e",
      "clientId": "avail-ui",
      "name": "Avail UI",
      "description": "UI for Avail",
      "rootUrl": "http://localhost:3000/",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8082/*",
        "http://localhost:3000/*",
        "http://localhost:38081/*",
        "http://localhost:38082/*",
        "https://oauth.pstmn.io/v1/callback"
      ],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:3000/*##http://localhost:38082/*##http://localhost:8082/*##http://localhost:38081/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "eb293144-cfb5-4cc6-a0e6-60181f355ce3",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "6e91369a-06de-415b-9c40-46145cd14254",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "6952c086-0a07-4505-bdcd-a48855bccf3f",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/avail/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/avail/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d8696d22-04c3-46bd-84d3-cb4ebd79f1fe",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "691b035e-f33c-486c-b619-a66ad707498b",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "d3f3ff0b-893e-4e05-9dcb-791c1aca4ba9",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "40105271-4894-4e59-ae91-0a4321f9845c",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "b0b3f82e-5c10-45d6-92d0-ad80321d9439",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "50a07572-1007-497b-aa31-abdc0cf9148a",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b98c0c42-8110-4967-93a6-501331ee025b",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "2ad6530d-4a9c-4ba0-9028-289e0ff6543d",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "2d0b58e7-58c9-4212-baea-808d73dcf723",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b382c49a-7128-4b3c-968d-0359047355e5",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9b75db50-d749-4fb2-acc3-f18861051a76",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "325a7e07-30ec-4415-9ebf-d3d592107fc1",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "846c5b29-94dd-401c-91a4-8f7dc9c7f55c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d4db0a1-a1cb-4e13-85a6-673d77087ac5",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "37e8f70a-8dfd-4772-adb5-e710871849eb",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "59918d24-cb0d-402a-9e6c-a5923e8dbcbc",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "09830c9d-0a5c-45fb-b01f-edbc542f32ce",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eda58469-5881-4bcc-9445-fa5af3877887",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "45b052aa-ab78-4e58-9c88-6b1c03554c48",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a0626a3b-2e77-4c3f-8e98-65e3339b96ce",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "77778319-f463-4581-95e6-e858d0b4c374",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "ac428e64-08da-46e9-9d4c-2d441567cb6e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9a7f7f47-8e74-4dba-b301-6bd0c642bcea",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f0597c04-6b6c-466f-8024-f6d7c8770d95",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0a2f100e-b444-4686-94dd-315d21a7f99e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "b8f2fbb9-cb29-4ffd-a863-b7f675dd7afb",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5e44ebfb-f990-4beb-bd50-09499536de9e",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3e575835-f1eb-4bf5-a1de-24ac5ed0f7aa",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "31636394-1e53-438b-a70f-479a3ede7df4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "8b115747-7bc1-4a83-9f6a-1dca4ca2e33c",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "9e361739-2d73-4ab4-b528-cf495f8614e6",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ce6329f6-912d-464c-9510-0d6a773cee68",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5a64eb37-d56b-48da-9404-34d1b012f9fb",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "2d1c7d7e-1f6f-44d7-9886-ecc73f46a859",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0b0389c4-ad82-42e4-9fd3-cba3e221cb70",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "bb288533-63cc-488c-8a90-1185f94bd1ea",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "880ab06f-593c-4a24-b02f-930a2f323016",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c6b18187-3061-4b03-8726-3c8edfe4889a",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e91750c9-75bb-4d9f-93e9-87534501471c",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "339f0dac-e4fd-4b79-ab93-adb6cd3d18b0",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "37b550d4-fa8f-4744-b0dd-657af0241aec",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "d91fe495-39a9-48be-bc5f-f06a17a3d821",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "efdfbb83-dd2f-45e0-aebd-6248c8ea15b5",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "70287cd5-32e7-41bc-8f06-ba5ee2a50346",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "35408987-b5a5-42f9-ba75-2e44ce1e1cda",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "aff6e044-7f9e-4dc6-b380-3496d013f385",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "9b25d2f0-5f28-4b99-b815-31fec8b9b873",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAyYhxW1qB2jw2UZH+o9+c0ygOLZI2t+TkaR+PvFcpZpE+BST+0UrhGOw9kLnQK2ulZEh502fO4h2V0VrY2EreUryDvJUpq5A76nT/04yG2N3Kx6KwdyASDCja9MC6/s9w3mSIuB9Kaa3t63UAhk42S4+DnfIGZIgmAbhP2eVgu/Q689qxF/CsgmvnBXwMrM8Q38QmeMTOySpy1IiIDD57/wLfWEOPBkwODd599sBoaGqkaMXzkGpE5JeUrTRG2TNaf96IURcrcl6E3g1UHnlKwyU60aboHfTROu8jG6S3Jkybt2B2dqKmozgVl9NJIMCJ+5zgduhMlW/8UHkfaxe9iwIDAQABAoIBAGM4PyLsTNjuYwnG2HjCqzmUU2KhRTpFQST2SnQ9716VbFTpEWFmPathB7B8ot31ufBE9GGeDo9pZGy1juPx/EH8mNkcEO9r6+uy3Y6/9VXI4EBoOvvzOJ9u79mnF4lDBP0gvuTzVtXvsR6GtJLq57VMu05kLTyKgTfAj+Oll/oAVMhU/D0OU1F4wzib2o+LNawq5/0ptpIYT5Ss9AXwzjQC0MeQWcOTUmxEBSNgxlXqgmnmNTQnBfcmU41H+kpSMMe+LumE6uzqw0om4OddqCnYtWt/+ibFkbUAXUMmbayBGtnEtv7gaocMVBFSf5+qDchs8gtBK/rPtNEbe55ZZZkCgYEA60dMLLv9mQw/SceMjwafRmCPXUaqgxsMH2P0xyh1ZorPbXFTUwXrtK2INlE0Mh1a5ty3dL9TfWfY5WSCxXTctFfmrOzFBGFcYem28B6Ac/z8xpaBJWMJ8PJ6I14VpXgSGso+tJZGbkaJj6FgnAEOg2Zu/LId0WmQPwzoH5oMWzMCgYEA20hNZ5n4bbnwe8vkorHS74jagHJeLrjRkcJBVfAg4df1B0mibupm6SOKubqdFhxWoCrm1/JFmAkdKMRlEi8p72q07lhSYxkCKqjBVbp00GovpfDhaRmM8ZErTuteh3nNINUkcuow/dkKAuSYdY88jofsZLSRXHZZvvqsPEnHVEkCgYBz0idXpjuTCgplwYwaJIJn3MT2gAEUhU4Ubdpj6DDTB+ZQ1AbWygVcbkitpI/zU6waFfFh0YXCKEsHsdEGbx7u0I7H9c6O93bI5Iqf7gQCFTpCcHim9PhB2rvxiTFSwab39TOlJo0JYEP7ps+uPH7uhJCCaRRwsGzH/QyP8f+/LQKBgQDWTOLYzPCsy3rqgWkAVyj+T5C61wqUPqsQ9/dCNVrtXFBqvtuv6gSI8+Mvf+DlKuy9uy+++1ZoLwAAR28/RjiFcpNAG7DoiBhF+IZ5ca+Xvy6xzad9PysvKeBZUE0huTdvTt5AL/+RFftiuGUG/uT/pnawNIebBU7QBcstYC0dgQKBgEDDRPqtQQ5vTJ9fuZs95QgL86HIxHaBGaOXDPYB4ZIINOrDVS7dkuJgrAfzLSLltApg4aFt2DzrBw65QxwSZ4a5xAz8NBbXSiPixCpalZ1uKLPqsnzCWyITXoF/ON3iXh9EGXuGmXgwkN2UCXsQ+Pwjk3IRpJtDJFImim7T2DFt"
          ],
          "certificate": [
            "MIICmTCCAYECBgGFGBwz3DANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVhdmFpbDAeFw0yMjEyMTUyMzI0MzlaFw0zMjEyMTUyMzI2MTlaMBAxDjAMBgNVBAMMBWF2YWlsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyYhxW1qB2jw2UZH+o9+c0ygOLZI2t+TkaR+PvFcpZpE+BST+0UrhGOw9kLnQK2ulZEh502fO4h2V0VrY2EreUryDvJUpq5A76nT/04yG2N3Kx6KwdyASDCja9MC6/s9w3mSIuB9Kaa3t63UAhk42S4+DnfIGZIgmAbhP2eVgu/Q689qxF/CsgmvnBXwMrM8Q38QmeMTOySpy1IiIDD57/wLfWEOPBkwODd599sBoaGqkaMXzkGpE5JeUrTRG2TNaf96IURcrcl6E3g1UHnlKwyU60aboHfTROu8jG6S3Jkybt2B2dqKmozgVl9NJIMCJ+5zgduhMlW/8UHkfaxe9iwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBpWSHpQgH8iJdyrr7x+ea5YR1qFRTY0cW5zwgcB+P0hqGJcjcpjsshrVZDN716WB0jDtwGGn+G7VbgwBzdbbVfiI4Ll50kNbcQGekOodQSQSNP9jtMcMywJHMOwKW0PWQMkahSyA5aHvJ0djKlWEM6aKri9JRelHAxw8I4TB5vznnD24MCwFuQxiFdeIR4+Hxf+nycVKCatEq5s+rhkXXZK9t5D41zIdlYRHHEZ0UgfV6yo5Ea1AEsK6G0PnDugaICt2rFvcQrX0KxQ60Dt8iEHa9MLl0Ve1KxuEScKg3W2KX3RyjsB/pbDHv7osKpCW4eq0MwZec6MHdANlvweIUr"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "c9fcc13a-fdc4-453c-a1f6-0797d6d1370f",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAtRvWw6WwTjyG+qMYpPYDr9BGTPdo1nHV88iJfQ5YNhbU2J0e/Eym+VL0g2srwb7Rtybw90LVwcpk0vWc3bqXgPIF4EuWUaAECKPXxh+2faizPOVP/VGyT8fWqEAu+H7Y6RptLeHl8bN074GujgUjY/glr+LA9TLJ0H1Xs6ZBaJ4OFe5wqSlZKh2v/1DMHwnNBwTjBvqBjSq5/FiAnWvPe31UopJZ0jpsMCeGMo4YnTsnZfiNJ3qNr/xsyFW6LkEOfyND+igIw694dbZHXeRP+yKMJwpsJt8bdi1Rjx6L6+oVZfnksJrk/kw8KA1mRfpLpLe+AdIHlog8NMrAjLT/OwIDAQABAoIBAD+zUf+wqGlsOqGvefyTl0pgfEmX/+TlVzaOw2UcBYTI1QZ3hS2CnHw3ZE9RA6v6vPKpnLmrZVnrITleMFWAyscM2WpBy9Zb7O9JCZzjDKH4E0sI8PCNqqULCgJVyO+YVhzvMZWgzesMjsWrHEVRo1gHMOJDZFEaEwfk/lLu2DS+QwosKsqbPNwT2850kTO8aKUtpWCbdwPMSqdk7Mt+RsdcbGqB1kRY1DYI5BOr0borkFKFWKnIdUW21/99RjftKU1u0IJfsNzyCTa685/3/2K2H1XSVoNPNsH/W/iRln4hAv2vEjmjm+td1k8aDEL4RPoekZ3nZ7cRu6JYIcz5fskCgYEA6VeryGXyw7EZiWnjZE9hCJgNP4rhyJ0OfAB0q2KLzzjOIpWX47fxCQSVndooLEncgidLngBz4D4s4FA/kIZEUJCM1PGqbnVNRfsNy5TL3Yu9iXCNF8+nHB3Ap0xLmkB/ygGvGHFU0qTvu1ctLi2oQGxqn39iTBQ+u7hKCVHcPK8CgYEAxrHDmJsasSfvkqxNGj6tXzsWwDwg/UTgp4l7jBrM9m+VOLQvQsfbuPEec0uBZP2KcPrd/Itr1vefkyatj3MnGNC5CkHIhRkfCeD/D3uJZndfvvT5d2qwtKrn8J38QcdoSHO9WvLsUcZNCVFux8VJnXfPLqbw5bHTe9ffdTGMQTUCgYEAxYVFEJnb6fMcHsnXhq37AX9Ul5lEjsED5cus9vawSnVXaMcgj87A5lVPIRPuNa9ATZxd0h2n+QYojqjfZcOCSIBT9l2rW11IUBi4EMCf4aXMh28SwDkyyAYXcoaO6L/4bFMImLQ2jSi5Fegxgol7hy0/BEycNLJeeCED6ue0elkCgYAHX5FimF7lNBYv2zUBRFIqtoahm5mdzHCJxxBOoq/4dSuUbxtR3xjIRCpdHPAwTzhT+PtD4+ickZPaYhUOvbc1tIkpWEeYqNX+B9tvN6ZhpwxmibC4Pb1Q9wakZzh1OHEmPyVHurwKTNGPBvaVczzIGyoVERzfaTnv3pLsRmpuAQKBgQDGAYg3GWjvd78SOQWSQHYeHNwJWeW6bD2lgt9bqwHAOVJ8qwlP6ArIPI/aIXRzJmGpVv6D61C0qiAgi9k2bzUlQQU3F9sRYi0xct/Ony1CLhNY6WGdKckoxuocZ6QM3JXXJXV5CslKi9WKpEZv8WLp6ainR5j6dxGTbnGjKuYkgA=="
          ],
          "certificate": [
            "MIICmTCCAYECBgGFGBw0nTANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVhdmFpbDAeFw0yMjEyMTUyMzI0MzlaFw0zMjEyMTUyMzI2MTlaMBAxDjAMBgNVBAMMBWF2YWlsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtRvWw6WwTjyG+qMYpPYDr9BGTPdo1nHV88iJfQ5YNhbU2J0e/Eym+VL0g2srwb7Rtybw90LVwcpk0vWc3bqXgPIF4EuWUaAECKPXxh+2faizPOVP/VGyT8fWqEAu+H7Y6RptLeHl8bN074GujgUjY/glr+LA9TLJ0H1Xs6ZBaJ4OFe5wqSlZKh2v/1DMHwnNBwTjBvqBjSq5/FiAnWvPe31UopJZ0jpsMCeGMo4YnTsnZfiNJ3qNr/xsyFW6LkEOfyND+igIw694dbZHXeRP+yKMJwpsJt8bdi1Rjx6L6+oVZfnksJrk/kw8KA1mRfpLpLe+AdIHlog8NMrAjLT/OwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA7lmdD31zHXQW7tGJc5ID/uqnkDAgAV0jAf3aPCqybSI9ggBAqn+LgPvHLzyDpyWT1oy/Tun6a3qY0wiC25K7cOnZHbMfz4S7Qb6mnMAs/J/QNb14NhAvm+6WeXiodIxH4lNdD1SQYQm11gbuQp9yBF2IJG53RR2+MuSkyKbzMCazNfghol1xEC7KaFRBjbOB5itcUrMJicsfeUY3RvA7qlLCLR1xbVEn/c1kLifzilkPQYBjCc4AuIL9NPF2NrwPkUFBqjxK/Bt520+/1RMPAL6nW9IXKy5PE6PAd+7rSfoEUXSQ2gEp5LDWP4ZbMZGEj/mMUJEoNQgECzO40W3VS"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "b35c7b76-c6ce-4d13-93c2-d5ae1a8961d8",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["dcb57cbd-1f55-4bd6-85b3-32efe9b41f3e"],
          "secret": ["vukVp8Ypm7ebCXQUL9y6Tw"],
          "priority": ["100"]
        }
      },
      {
        "id": "18234ee8-380a-4913-b333-ff11448930c4",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["f75081db-2dc6-4b6b-98b2-a2821fa8618c"],
          "secret": ["h9rRIJmReDByhpLqEtiT8BymFbWMlTVqfborCA7HqxANcjm2xWgbSZdnwI0iMxFFulKkixlFaTMXY9PIKQyDTQ"],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "fb5d5fb0-4f30-4d7b-8ab4-68f1e39d3259",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d3a9a554-8ad0-47d1-aa5f-f76212337937",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5d0985c8-4c77-4bfa-b54c-006966e70147",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "81f96af1-674d-477f-aac9-2bc414127c90",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7f3c704c-4d0c-4d04-b1de-29f8122f633e",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b48f29a1-0056-40bb-b481-344278cedfdb",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ca819be-ec5a-4952-81dc-38cc38a0e1b5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b85c8df9-897b-4411-9861-344a05210c69",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4399c3a5-b3c8-48a6-acc1-5d336286311a",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "00239029-b42e-4aaa-8d50-774e45b36441",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2c8935d0-160c-48ad-aaf7-56bf6bc71f69",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51d40c40-94de-4deb-a3d6-9f86f5fc3aa2",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "457db00f-b2b9-48a1-870e-ef9fe6083697",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "317a3129-329f-4f4f-a598-cc749379124d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2734794f-cdbe-438b-bab9-c3c41215abcf",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d940a25f-2db5-4e96-ad2e-9e95b4c5c752",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5711bb64-7ac0-45c7-98ae-b894b8ed1fcc",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f2337d94-24cd-4b7e-bd20-a5638918c665",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b798ce2a-8f83-49c1-9c24-e65f4e1b5073",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "91958037-54a7-4382-8d0b-d750484ffc0c",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "fe6b8582-8196-4642-9b2e-bf265980fb9b",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "6983c7d4-bb24-45c5-87ab-65f1f803eca6",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
